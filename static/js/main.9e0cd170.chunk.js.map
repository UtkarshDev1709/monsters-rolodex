{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-lsit.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLTC,EAAW,SAAAR,GAAK,OACvB,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJjBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BHG,E,kDAjCb,aAAc,IAAD,8BACX,gBAEKC,MAAM,CACTR,SAAW,GACXS,YAAc,IALL,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAWc,S,oBAG7C,WAAU,IAAD,SAC2BE,KAAKR,MAAhCR,EADA,EACAA,SAAWS,EADX,EACWA,YACZQ,EAAmBjB,EAASkB,QAAQ,SAAAvB,GAAO,OAC/CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA5BRO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e0cd170.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n    <img \r\n        alt=\"monster\" \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nimport './card-list.style.css';\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = props =>  (  \r\n      <div className=\"card-list\">\r\n        { props.monsters.map( monster => (\r\n           <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n      </div>\r\n);","import React from 'react';\r\n\r\nimport \"./search-box.style.css\"\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className=\"search\"\r\n        type=\"search\" \r\n        placeholder={placeholder}  \r\n        onChange={handleChange}\r\n    />   \r\n); ","import React , { Component } from \"react\";\nimport './App.css';\nimport { CardList } from \"./component/card-list/card-lsit.component\";\nimport { SearchBox } from \"./component/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state={\n      monsters : [],\n      searchField : ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then( response => response.json())\n      .then(users => this.setState({monsters : users}))\n  }\n\n  render() {\n    const {monsters , searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        placeholder = \"monster rolodex\"\n        handleChange = {e => this.setState({searchField : e.target.value })}\n       />\n      <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}